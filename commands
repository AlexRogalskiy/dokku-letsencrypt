#!/usr/bin/env bash
set -eo pipefail; [[ $DOKKU_TRACE ]] && set -x

PLUGIN_BASE_PATH="$PLUGIN_PATH"
if [[ -n $DOKKU_API_VERSION ]]; then
  PLUGIN_BASE_PATH="$PLUGIN_ENABLED_PATH"
fi

source "$PLUGIN_BASE_PATH/letsencrypt/functions"
source "$PLUGIN_BASE_PATH/nginx-vhosts/functions"
source "$PLUGIN_BASE_PATH/common/functions"

if [[ $1 == letsencrypt || $1 == letsencrypt:* ]]; then
  [[ -z $2 ]] && echo "Please specify an app to run the command on" && exit 1
  verify_app_name "$2"
  APP="$2"
  APP_ROOT="$DOKKU_ROOT/$APP"
  APP_SSL_ROOT="$DOKKU_ROOT/$APP/tls"
  LETSENCRYPT_ROOT="$APP_ROOT/letsencrypt"
  LETSENCRYPT_SERVERFILE="$LETSENCRYPT_ROOT/server"
  LETSENCRYPT_EMAILFILE="$LETSENCRYPT_ROOT/email"
fi

case "$1" in
  letsencrypt)
    dokku_log_info2 "Let's Encrypt $APP..."

    # dynamically choose a port for the letsencrypt standalone authenticator
    ACMEPORT=$(get_available_port)

    letsencrypt_check_email

    letsencrypt_update
    letsencrypt_acmeproxy_on
    letsencrypt_acme || true    # remove ACME proxy even if this fails
    letsencrypt_acmeproxy_off

    dokku_log_verbose "done"

    ;;

  letsencrypt:server)
    letsencrypt_create_root

    if [[ -z "$3" ]]; then
      LETSENCRYPT_SERVER=$(letsencrypt_get_server)

      if [ -z "$LETSENCRYPT_SERVER" ]; then
        dokku_log_verbose "Let's Encrypt server for $APP is default"
      else
        dokku_log_verbose "Let's Encrypt server for $APP is '$LETSENCRYPT_SERVER'"
      fi

    else
      letsencrypt_set_server $3
    fi

    ;;

  letsencrypt:email)
    letsencrypt_create_root

    if [[ -z "$3" ]]; then
      LETSENCRYPT_EMAIL=$(letsencrypt_get_email)

      if [ -z "$LETSENCRYPT_EMAIL" ]; then
        dokku_log_verbose "Let's Encrypt e-mail for $APP is not set"
        dokku_log_verbose "  to set, use dokku letsencrypt:email $APP <email>"
      else
        dokku_log_verbose "Let's Encrypt e-mail for $APP is '$LETSENCRYPT_EMAIL'"
      fi

    else
      letsencrypt_set_email $3
    fi

    ;;

  help)
    HELP=$(cat<<EOF
    letsencrypt <app>, Enable or renew letsencrypt for app
    letsencrypt:email <app>, Get e-mail address used as letsencrypt contact
    letsencrypt:email <app> <e-mail>, Set e-mail address used as letsencrypt contact
    letsencrypt:server <app>, Get selected letsencrypt server for app
    letsencrypt:server <app> <server>, Select a letsencrypt server for app (server can be 'default' 'staging' or a URL)
EOF
)
    if [[ -n $DOKKU_API_VERSION ]]; then
      echo "$HELP"
    else
      cat && echo "$HELP"
    fi
    ;;

  *)
    exit "$DOKKU_NOT_IMPLEMENTED_EXIT"
    ;;

esac
